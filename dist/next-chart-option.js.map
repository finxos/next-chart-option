{"version":3,"sources":["next-chart-option.js"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"next-chart-option.js","sourcesContent":["(function() {\n  var global = global || this || window || Function('return this')();\n  var nx = global.nx || require('next-js-core2');\n  var NxChartData2set = nx.ChartData2set || require('next-chart-data2set');\n\n  // private package:\n  var echartsAdapter = require('echarts-adapter').echartsAdapter;\n  var toEcharts = echartsAdapter.toEcharts;\n  var assembleData = echartsAdapter.assembleData;\n  var adaptInst = echartsAdapter.adaptInst;\n\n  nx.chartOption = function(inData) {\n    var charts = inData.chart.charts;\n    var chartStyle = JSON.parse(charts[0].style);\n    var chartOption = chartStyle.chartOption;\n    var dateRange = chartStyle.dateRange;\n    var autoUpdate = chartStyle.autoUpdate;\n    var isRaw = chartStyle.format === 'raw';\n    if (isRaw) return chartStyle;\n    var seriesInfoset = NxChartData2set.info(inData.infolist);\n    var dataset = NxChartData2set.data(inData.datalist);\n    var sids = chartOption.seriesList.reduce(function(filtered, item) {\n      item.show && filtered.push(item.sid);\n      return filtered;\n    }, []);\n    var dataTable = assembleData(dataset, sids, dateRange, autoUpdate, 'date', seriesInfoset);\n    var option = toEcharts(chartStyle, dataTable, seriesInfoset);\n    return adaptInst(option);\n  };\n\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = nx.chartOption;\n  }\n})();\n"]}